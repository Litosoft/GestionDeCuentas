@model SGSE.Entidad.BELogin
@{
    Layout = null;
    bool ShowCaptcha = Convert.ToBoolean(@ViewBag.ShowCaptcha);
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Iniciar sesión &middot; Sistema de Gestión del Servicio Exterior</title>
    <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">
    <meta name="description" content="">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,400italic,500,700">

    <link href="@Url.Content("~/Content/css/vendor.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/css/baboon.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/css/application.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/css/login.css")" rel="stylesheet"/>
</head>
<body>
    <div class="login">
        <div class="login-body">
            <a class="login-brand" href="index.html">
                <img src="~/Content/img/logo_mini.gif" style="margin-left:40px;" />
            </a>
            <div class="login-form">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { data_toggle = "validator", id = "login_form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="txtusr">Usuario</label>
                        @Html.TextBoxFor(m => m.user, new { @class = "form-control", autocomplete = "off", required = "required", id = "txtusr", name = "txtusr", minlength = "4", maxlength = "26" })
                    </div>
                    <div class="form-group">
                        <label for="txtpwd">Contraseña</label>
                        @Html.PasswordFor(m => m.pass, new { @class = "form-control", autocomplete = "off", required = "required", id = "txtpwd", name = "txtpwd", minlength = "4", maxlength = "44" })
                    </div>
                    <div class="form-group">
                        <label class="custom-control custom-control-primary custom-checkbox">
                            @Html.CheckBoxFor(m => m.sess, new { @class = "custom-control-input" })
                            <span class="custom-control-indicator"></span>
                            <span class="custom-control-label">Mantener mi sesion iniciada</span>
                        </label>
                    </div>
                    if (ViewBag.ShowCaptcha == 1)
                    {
                    <div class="captcha_wrap">
                        <div class="captcha">
                            Captcha: Arrastre y Ordene
                        </div>
                        <ul id="sortable">
                            <li class="captchaItem">1</li>
                            <li class="captchaItem">2</li>
                            <li class="captchaItem">3</li>
                            <li class="captchaItem">4</li>
                        </ul>
                    </div>
                    }
                    <button id="btn_submit" class="btn btn-primary btn-block" type="submit">Iniciar sesión</button>
                }
            </div>
        </div>
        <div class="login-footer">
            No tiene cuenta? @Html.ActionLink("Solicite una cuenta", "Signup") 
        </div>
    </div>
    <script src="@Url.Content("~/Scripts/base/vendor.min.js")"></script>
    <script src="@Url.Content("~/Scripts/base/elephant.min.js")"></script>

    @Html.Partial("~/Views/Shared/Partials/_Toastr.cshtml")

    <script src="@Url.Content("~/Scripts/plugins/UI/jquery-1.3.2.js")"></script>
    <script src="@Url.Content("~/Scripts/plugins/UI/ui.core.js")"></script>
    <script src="@Url.Content("~/Scripts/plugins/UI/ui.sortable.js")"></script>
    
    
    <script type="text/javascript">
        (function ($) {
            $.fn.shuffle = function () {
                return this.each(function () {
                    var items = $(this).children();

                    return (items.length)
                        ? $(this).html($.shuffle(items, $(this)))
                    : this;
                });
            }

            $.fn.validate = function () {
                var res = false;
                this.each(function () {
                    var arr = $(this).children();
                    res = ((arr[0].innerHTML == "1") &&
                        (arr[1].innerHTML == "2") &&
                        (arr[2].innerHTML == "3") &&
                        (arr[3].innerHTML == "4"));
                });
                return res;
            }

            $.shuffle = function (arr, obj) {
                for (
                var j, x, i = arr.length; i;
                j = parseInt(Math.random() * i),
                x = arr[--i], arr[i] = arr[j], arr[j] = x
            );
                if (arr[0].innerHTML == "1") obj.html($.shuffle(arr, obj))
                else return arr;
            }

        })(jQuery);

        $(function () {
            $("#sortable").sortable();
            $("#sortable").disableSelection();
            $('ul').shuffle();

            $("#login_form").submit(function (e) {

                @if (ViewBag.ShowCaptcha == 1) {

                    @:  if (!$('ul').validate()) {
                    @:      alert("Arrastre y ordene los números para continuar.")
                    @:      e.preventDefault();
                    @:  }
                }
            });
        });
    </script>
    
</body>
</html>
