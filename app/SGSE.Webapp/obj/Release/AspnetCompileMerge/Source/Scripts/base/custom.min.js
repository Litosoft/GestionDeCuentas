$.fn.datepicker.dates.es = { days: "Domingo Lunes Martes Miercoles Jueves Viernes S\u00e1bado".split(" "), daysShort: "Dom Lun Mar Mie Jue Vie Sab".split(" "), daysMin: "Do Lu Ma Mi Ju Vi Sa".split(" "), months: "Enero Febrero Marzo Abril Mayo Junio Julio Agosto Setiembre Octubre Noviembre Diciembre".split(" "), monthsShort: "Ene Feb Mar Abr May Jun Jul Ago Set Oct Nov Dic".split(" "), today: "Hoy", clear: "Limpiar", titleFormat: "MM yyyy" };
var validaSimple = {
    __isEmpty: function (a) { return "string" == typeof a && !a.trim() || "undefined" == typeof a || null === a }, inputTexts: function (a, c) { var d = $(a), e = this, g = !0; $.each(c, function (a, b) { var f = $(b.id); if (e.__isEmpty(f.val())) return d.html("Debe ingresar un valor para <strong>" + b.label + "</strong>"), f.focus(), g = !1; if ("undefined" != b.minsize && f.val().length < b.minsize) return d.text(b.label + " debe tener como m\u00ednimo " + b.minsize + " caracteres"), f.focus(), g = !1 }); return g }, inputSelect: function (a, c) {
        var d = $(a),
        e = !0; $.each(c, function (a, c) { var b = $(c.id); if (0 == $(c.id).find(":selected").length) return d.html("Debe seleccionar un valor de la lista <strong>" + c.label + "</strong>"), b.focus(), e = !1 }); return e
    }
};

var Helper = {
    /**
    *   Llena un cotrol HTML Select, con datos invocados a un metodo ajax  
    *   pasandole un parametro (id), los valores son devueltos y llenados en un control select (obj) si 
    *   se proporciona un valor por defecto para el selector,este se envia por el parametro "def".
    *
    *   @param {string} met -   Metodo ajax invocado
    *   @param {string} sid -   Parametro del método
    *   @param {object} obj -   Objeto <Select> Html.
    *   @param {string} [def] - Valor por defecto que mostrará el control
    *
    *   Ejemplo: 
    *   Helper.ajaxSelectList(ajax.gmnd, cta.OrganoServicio.CID, this.$mnd, cta.Moneda.CID);
    */
    ajaxSelectList: function (met, id, obj, def) {
        var arr = [];
        try {
            obj.empty();
            if (id !== "" && id != null) {
                $("<option> CARGANDO ... </option>").appendTo(obj);
                
                $.getJSON(met, { sid: id }, function (d) {
                    var err = d.ERR;
                    if (err == null || err == '' || err == "null") {
                        var dat = d.DATA;
                        if (dat != null && dat != "" && dat != "null") {
                            $.each(dat, function (id, option) {
                                arr.push("<option value='" + option.Value + "'>" + option.Text + "</option>");
                            });

                            obj.empty().append(arr.join(''));

                            if (def != null && def !== "") {
                                obj.val(def);
                            }
                        }
                        else {
                            obj.empty();
                            $("<option value='0'> * NO SE ENCONTRARON DATOS *</option>").appendTo(obj);
                        }
                    }
                    else {
                        toastr.error(err);
                    }
                })
                .error(function (jqXHR, textStatus, errorThrown) {
                    toastr.error("Solicitud de servidor fallida. Error:" + textStatus);
                });
            }
            else {
                $("<option> SIN DATOS </option>").appendTo(obj);
            }
        }
        catch (e) {
            toastr.error("Error en solicitud: " + e.message);
        }
    }

};

var TextAreaObject = {
    MAX_AREA: 255,
    countChar: function (obj, objtext) {
        var len = obj.value.length;
        if (len >= this.MAX_AREA) {
            obj.value = obj.value.substring(0, this.MAX_AREA);
            $(objtext).text("Limite máximo alcanzado.");
        } else {
            var len_txt = ((this.MAX_AREA - len) > 1) ? " caracteres" : " caracter";
            $(objtext).text("max. " + (this.MAX_AREA - len) + len_txt);
        }
    }
}