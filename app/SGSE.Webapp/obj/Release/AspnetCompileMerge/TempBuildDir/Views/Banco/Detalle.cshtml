@using SGSE.Webapp.Helpers

<div class="title-bar">
    <h2 class="title-bar-title">
        <span class="d-ib">Detalle Bancos</span>
    </h2>
</div>

<div class="row" style="margin-top:24px;">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-4">
                        <table class="table-form-page" width="100%">
                            <tr>
                                <td class="td-label">Nombre</td>
                                <td>
                                    @Html.TextBoxCustom("txt_nom", 35, 1)
                                </td>
                            </tr>
                            <tr>
                                <td class="td-label">URL</td>
                                <td>
                                    @Html.TextBoxCustom("txt_url", 120, 2)
                                </td>
                            </tr>
                            <tr>
                                <td class="td-label td-checkbox" style="margin-top:17px;">Situación</td>
                                <td>
                                    <label class="custom-control custom-control-danger custom-checkbox text-danger">
                                        <input id="chk_sit" class="custom-control-input" type="checkbox" name="mode" tabindex="6">
                                        <span class="custom-control-indicator"></span>
                                        <span class="custom-control-label">Inhabilitar el banco</span>
                                    </label>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <span id="bco_err" class="text-danger text-error"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <button id="bco_btn_sav" class="btn btn-primary btn-sm">Grabar</button>
                        <a id="btn_add_age" href="javascript:void(0);" class="btn btn-sm btn-default btn-default-modal" style="display:none;"> Agregar agencia bancaria</a>
                        <a href="@Url.Action("Listar","Banco")" class="btn btn-default btn-sm" style="margin-right:10px;">Regresar</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<input type="hidden" id="hdn_sid" value="0" />

@* Cuerpo *@
<div class="row" style="margin-top:34px;">
    <div class="col-md-12">
        <table class="table table-bordered table-hover table-responsive table-detail" id="dt_agencias" width="100%">
            <thead>
                <tr>
                    <th class="header-w2">N°</th>
                    <th>Nombre</th>
                    <th>Direccion1</th>
                    <th>Dirección2</th>
                    <th>Tipo Operación</th>
                    <th>Pais</th>
                    <th class="header-w4">Acción</th>
                </tr>
            </thead>
            <tbody id="tbody_dt">
                <tr>
                    <td>&nbsp;</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section layoutModals {
    <div id="m_agencia" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h5 class="modal-title">Agencia Bancaria</h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <table class="table-form" width="100%">
                                <tr>
                                    <td style="width: 100px;">Nombre Agencia</td>
                                    <td>
                                        @Html.TextBoxCustom("txt_ag_nom", 35, 1)
                                    </td>
                                </tr>
                                <tr>
                                    <td>Dirección 1</td>
                                    <td>
                                        @Html.TextBoxCustom("txt_ag_di1", 35, 2)
                                    </td>
                                </tr>
                                <tr>
                                    <td>Dirección 2</td>
                                    <td>
                                        @Html.TextBoxCustom("txt_ag_di2", 35, 3)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="td-label">Tipo Operación</td>
                                    <td>
                                        @Html.DropDownList("sel_ag_tpo", ViewBag.Tipo as SelectList, new { @class = "form-control", tabindex = "4" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>País</td>
                                    <td>
                                        @Html.DropDownList("sel_ag_pai", ViewBag.Paises as SelectList, new { @class = "form-control", tabindex = "5" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <p>&nbsp;</p>
                    <div class="row">
                        <div class="col-md-12 spacer_15">
                            <span id="modal_message_ag" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="hdn_sid_ag" value="0" />
                <div class="modal-footer pie-modal-bg pie-modal-borde">
                    <div class="row">
                        <div class="col-md-12">
                            <div>
                                <div class="pull-left">
                                    <a id="btn_age_sav" href="javascript:void(0);" class="btn btn-primary btn-sm">Grabar</a>
                                </div>

                                <button type="button" class="btn btn-default btn-sm btn-default-modal" data-dismiss="modal">Cerrar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section layoutScripts{
    <script src="@Url.Content("~/Scripts/plugins/jquery.tmpl.min.js")"></script>
    <script type="text/javascript">
        var ajax = {
            sbco: "@Url.Action("enNBUT09", "Banco")",
            lage: "@Url.Action("YVVFN2hr", "Banco")",
            sage: "@Url.Action("NGZIbEEr", "Banco")",
            giag: "@Url.Action("TU1sdEZJ", "Banco")",
            dage: "@Url.Action("NVdqVjlt", "Banco")",
            lang: "@Url.Content("~/Content/lang/lang.json")"
        }
    </script>

    <script id="tmpl_agencias" type="text/x-jquery-tmpl">
        <tr>
            <td class="text-center">${Row}</td>
            <td>${Nombre}</td>
            <td>${Direccion1}</td>
            <td>${Direccion2}</td>
            <td>${Tipo.Texto}</td>
            <td>${Pais.Nombre}</td>
            <td class="text-center">
                <a href="javascript:void(0);" class="href-edt" data-sid='${CID}'><span class="icon icon-edit icon-grid"></span></a>
                <a href="javascript:void(0);" class="href-del" data-sid='${CID}'><span class="icon icon-trash-o icon-grid"></span></a>
            </td>
        </tr>
    </script>

    <script id="tmpl_agencias_empty" type="text/x-jquery-tmpl">
        <tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
        <tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
        <tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
        <tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
        <tr><td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td><td></td></tr>
    </script>
    <script type="text/javascript">
        (function (b) {
            var h = { getModelo: function () { return @Html.Raw(Json.Encode(Model)) } }, g = {
                elements: { inputs: { FRM: "input[id^='txt_'], input[id^='chk_']", NOM: "#txt_nom", URL: "#txt_url", SIT: "#chk_sit" }, data: { SID: "#hdn_sid" }, buttons: { ADD: "#btn_add", SAV: "#bco_btn_sav", AGE: "#btn_add_age" }, labels: { ERR: "#bco_err" } }, initControls: function () {
                    this.$error = b(this.elements.labels.ERR); this.$inputs = b(this.elements.inputs.FRM); this.$nom = b(this.elements.inputs.NOM); this.$url = b(this.elements.inputs.URL); this.$sit = b(this.elements.inputs.SIT);
                    this.$sid = b(this.elements.data.SID); this.$btn_sav = b(this.elements.buttons.SAV); this.$btn_agencia = b(this.elements.buttons.AGE); this.$btn_nuevo = b(this.elements.buttons.ADD); return this
                }, initUI: function () { this.$inputs.val(""); this.$inputs.prop("disabled", !1); this.$error.empty(); this.$btn_agencia.hide(); return this }, fill: function () {
                    var a = h.getModelo(); this.$nom.val(a.Nombre); this.$url.val(a.Url); this.$sit.prop("checked", 1 === a.Situacion.IntValue ? !1 : !0); this.$sid.val(a.CID); null !== a.CID ? this.$btn_agencia.show() :
                    this.$btn_agencia.hide()
                }, handleSave: function (a) {
                    var d = this; !1 !== validaSimple.inputTexts(this.elements.labels.ERR, { nom: { id: d.elements.inputs.NOM, label: "Nombre", minsize: 3, maxsize: 35 } }) && (this.$error.empty(), this.$inputs.prop("disabled", !0), b.confirm({
                        title: "Grabar Informaci\u00f3n", content: "\u00bfEsta seguro de grabar la informaci\u00f3n?", animationSpeed: 0, theme: "bootstrap", buttons: {
                            ok: { text: "Aceptar!", btnClass: "btn-primary", keys: ["enter"], action: function () { d.handleConfirm() } }, cancel: function () {
                                d.$inputs.prop("disabled",
                                !1)
                            }
                        }
                    }))
                }, handleConfirm: function (a) {
                    var d = this; a = []; a.push(this.$nom.val()); a.push(this.$url.val()); a.push(this.$sit.prop("checked") ? 0 : 1); a.push(this.$sid.val()); a = { dat: a }; try {
                        b.ajax({
                            contentType: "application/json; charset=utf-8", data: JSON.stringify(a), dataType: "json", type: "POST", url: ajax.sbco, success: function (a) {
                                var c = a.ERR; null == c || "" == c || "null" == c ? (a = a.DATA, null != a && "" != a && "null" != a && (1 === a.Estado ? (toastr.success(a.Mensaje), d.initUI(), window.location.href = '@Url.Action("Detalle", "Banco", new { sid = "___id___" })'.replace("___id___",
                                a.CID)) : toastr.error(a.Mensaje))) : toastr.error(c)
                            }
                        }).fail(function (a, b, d) { toastr.error("Solicitud de servidor fallida. Error:" + b + ". " + this.url) })
                    } catch (c) { toastr.error("Error en solicitud: " + c.message) }
                }, handleAgencia: function (a) { e.show(0) }, handleNuevo: function (a) { this.initUI(); this.$sid.val(""); this.$nom.focus(); f.cargarGrillaEmpty() }, bindEvents: function () { this.$btn_sav.on("click", this.handleSave.bind(this)); this.$btn_agencia.on("click", this.handleAgencia.bind(this)); this.$btn_nuevo.on("click", this.handleNuevo.bind(this)) },
                init: function () { this.initControls().initUI().bindEvents(); this.fill(); b(window).keydown(function (a) { if (13 == a.keyCode) return a.preventDefault(), !1 }) }
            }, e = {
                ID: "#m_agencia", INPUTS: "input[id^='txt_ag_'], select[id^='sel_ag_']", MSGERR: "#modal_message_ag", inputs: { NOM: "#txt_ag_nom", DI1: "#txt_ag_di1", DI2: "#txt_ag_di2", TPO: "#sel_ag_tpo", PAI: "#sel_ag_pai", SID: "#hdn_sid_ag" }, action: { buttons: { BUTTON_SAVE: "#btn_age_sav" } }, initControls: function () {
                    this.$modal = b(this.ID); this.$error = b(this.MSGERR); this.$inputs = b(this.INPUTS);
                    this.$nom = b(this.inputs.NOM); this.$di1 = b(this.inputs.DI1); this.$di2 = b(this.inputs.DI2); this.$tpo = b(this.inputs.TPO); this.$pai = b(this.inputs.PAI); this.$sid = b(this.inputs.SID); this.$btn_save = b(this.action.buttons.BUTTON_SAVE); return this
                }, initUI: function () { this.$inputs.val(""); this.$inputs.prop("disabled", !1); this.$error.empty(); return this }, initPlugins: function () {
                    b(".modal-dialog").draggable({ handle: ".modal-header" }); this.$modal.on("hidden.bs.modal", function (a) { b("#tbody_dt tr").siblings().removeClass("rowSelect") });
                    return this
                }, fill: function (a) { this.$nom.val(a.Nombre); this.$di1.val(a.Direccion1); this.$di2.val(a.Direccion2); this.$tpo.val(a.Tipo.StrValue); this.$pai.val(a.Pais.CID); this.$sid.val(a.CID) }, show: function (a) { this.$sid.val(a); "number" !== typeof a && this.getModalData(a); this.initUI().$modal.modal({ backdrop: "static", keyboard: !1 }) }, getModalData: function (a) {
                    var d = this; a = { sid: a }; try {
                        b.getJSON(ajax.giag, a, function (a) {
                            var c = a.ERR; null == c || "" == c || "null" == c ? (c = a.DATA, null != c && "" != c && "null" != c && d.fill(a.DATA)) :
                            toastr.error(c)
                        }).error(function (a, b, d) { toastr.error("Solicitud de servidor fallida. " + ajax.giag) })
                    } catch (c) { toastr.error("Error en solicitud: " + c.message) }
                }, handleSave: function (a) {
                    var d = this; !1 !== validaSimple.inputTexts(this.MSGERR, { di1: { id: d.inputs.NOM, label: "Nombre", minsize: 3, maxsize: 35 } }) && !1 !== validaSimple.inputSelect(this.MSGERR, { tpo: { id: d.inputs.TPO, label: "Tipo Operaci\u00f3n" }, pai: { id: d.inputs.PAI, label: "Pa\u00eds" } }) && (this.$error.empty(), this.$inputs.prop("disabled", !0), b.confirm({
                        title: "Grabar Informaci\u00f3n",
                        content: "\u00bfEsta seguro de grabar la informaci\u00f3n?", animationSpeed: 0, theme: "bootstrap", buttons: { ok: { text: "Aceptar!", btnClass: "btn-primary", keys: ["enter"], action: function () { d.handleConfirm() } }, cancel: function () { d.$inputs.prop("disabled", !1) } }
                    }))
                }, handleConfirm: function (a) {
                    var d = this; a = []; a.push(this.$nom.val()); a.push(this.$di1.val()); a.push(this.$di2.val()); a.push(this.$tpo.val()); a.push(this.$pai.val()); a.push(this.$sid.val()); a.push(g.$sid.val()); a = { dat: a }; try {
                        b.ajax({
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(a), dataType: "json", type: "POST", url: ajax.sage, success: function (a) { var c = a.ERR; null == c || "" == c || "null" == c ? (a = a.DATA, null != a && "" != a && "null" != a && (1 === a.Estado ? (d.$modal.modal("hide"), toastr.success(a.Mensaje), d.initUI(), f.getAgencias()) : (toastr.info(a.Mensaje), d.initUI(), d.$modal.modal("hide")))) : toastr.error(c) }
                        }).fail(function (a, b, d) { toastr.error("Solicitud de servidor fallida. Error:" + b) })
                    } catch (c) { toastr.error("Error en solicitud: " + c.message) }
                }, bindEvents: function () {
                    this.$btn_save.on("click",
                    this.handleSave.bind(this))
                }, init: function () { this.initControls().initUI().initPlugins().bindEvents() }
            }, f = {
                elements: { TABLE: "#dt_agencias", TEMPL: "#tmpl_agencias", TEMPL_EMPTY: "#tmpl_agencias_empty", TBODY: "#tbody_dt" }, initControls: function () { this.$table = b(this.elements.TABLE); this.$tmpl = b(this.elements.TEMPL); this.$tmpl_empty = b(this.elements.TEMPL_EMPTY); this.$tbody = b(this.elements.TBODY); return this }, cargarGrilla: function (a) { this.$tbody.empty(); this.$tmpl.tmpl(a).appendTo(this.$tbody) }, cargarGrillaEmpty: function () {
                    this.$tbody.empty();
                    this.$tmpl_empty.tmpl().appendTo(this.$tbody)
                }, getAgencias: function () { var a = this, d = { sid: g.$sid.val() }; try { b.ajax({ contentType: "application/json; charset=utf-8", data: JSON.stringify(d), dataType: "json", type: "POST", url: ajax.lage, success: function (c) { var b = c.ERR; null == b || "" == b || "null" == b ? (c = c.DATA, null != c && "" != c && "null" != c && 0 < c.length && a.cargarGrilla(c)) : toastr.error(b) } }).fail(function (a, b, d) { toastr.error("Solicitud de servidor fallida. Error:" + b) }) } catch (c) { toastr.error("Error en solicitud: " + c.message) } },
                delAgencia: function (a) { var d = this; a = { sid: a }; try { b.ajax({ contentType: "application/json; charset=utf-8", data: JSON.stringify(a), dataType: "json", type: "POST", url: ajax.dage, success: function (a) { var b = a.ERR; null == b || "" == b || "null" == b ? (a = a.DATA, null != a && "" != a && "null" != a && (1 === a.Estado ? (d.getAgencias(), toastr.success(a.Mensaje)) : toastr.info(a.Mensaje))) : toastr.error(b) } }).fail(function (a, b, d) { toastr.error("Solicitud de servidor fallida. Error:" + b) }) } catch (c) { toastr.error("Error en solicitud: " + c.message) } },
                handleEdit: function (a) { var d = a.currentTarget.getAttribute("data-sid"); b(a.currentTarget.parentElement.parentElement).addClass("rowSelect"); e.show(d) }, handleDel: function (a) { a.currentTarget.getAttribute("data-sid"); b.alert("No tiene los permisos necesarios.") }, bindEvents: function () { this.$table.delegate(".href-edt", "click", this.handleEdit.bind(this)); this.$table.delegate(".href-del", "click", this.handleDel.bind(this)) }, init: function () {
                    this.initControls().bindEvents(); this.getAgencias(); b(window).keydown(function (a) {
                        if (13 ==
                        a.keyCode) return a.preventDefault(), !1
                    })
                }
            }; g.init(); e.init(); f.init()
        })(jQuery);
    </script>
    @*
    <script type="text/javascript">
        'use strict';
        (function ($) {

            var modelo = {
                getModelo: function () {
                    return @Html.Raw(Json.Encode(Model))
                }
            }

            // Pagina principal
            var page = {
                elements : {
                    inputs : {
                        FRM: "input[id^='txt_'], input[id^='chk_']",
                        NOM: "#txt_nom",
                        URL: "#txt_url",
                        SIT: "#chk_sit"
                    },
                    data: {
                        SID: "#hdn_sid"
                    },
                    buttons: {
                        ADD: "#btn_add",
                        SAV: "#bco_btn_sav",
                        AGE: "#btn_add_age"
                    },
                    labels: {
                        ERR: "#bco_err"
                    }
                },

                initControls: function () {
                    this.$error = $(this.elements.labels.ERR);
                    this.$inputs = $(this.elements.inputs.FRM);

                    this.$nom = $(this.elements.inputs.NOM);
                    this.$url = $(this.elements.inputs.URL);
                    this.$sit = $(this.elements.inputs.SIT);
                    this.$sid = $(this.elements.data.SID);

                    this.$btn_sav = $(this.elements.buttons.SAV);

                    // Buttons
                    this.$btn_agencia = $(this.elements.buttons.AGE);
                    this.$btn_nuevo = $(this.elements.buttons.ADD);

                    return this;
                },

                initUI: function () {
                    this.$inputs.val('');
                    this.$inputs.prop("disabled", false);
                    this.$error.empty();
                    this.$btn_agencia.hide();

                    return this;
                },

                fill: function () {
                    var model = modelo.getModelo();

                    this.$nom.val(model.Nombre);
                    this.$url.val(model.Url);
                    this.$sit.prop('checked', (model.Situacion.IntValue === 1) ? false : true);

                    this.$sid.val(model.CID);
                    if (model.CID !== null) { this.$btn_agencia.show(); } else { this.$btn_agencia.hide(); }
                },

                // Handlers
                handleSave: function (e) {
                    var that = this;
                    var rules = {
                        nom: { id: that.elements.inputs.NOM, label: 'Nombre', minsize: 3, maxsize: 35 }
                    };
                    var T = validaSimple.inputTexts(this.elements.labels.ERR, rules);
                    if (T === false) return;

                    this.$error.empty();
                    this.$inputs.prop("disabled", true);

                    $.confirm({
                        title: 'Grabar Información',
                        content: '¿Esta seguro de grabar la información?',
                        animationSpeed: 0,
                        theme: 'bootstrap',
                        buttons: {
                            ok: {
                                text: "Aceptar!",
                                btnClass: 'btn-primary',
                                keys: ['enter'],

                                action: function () {
                                    that.handleConfirm();
                                }
                            },
                            cancel: function () {
                                that.$inputs.prop("disabled", false);
                            }
                        }
                    });
                },

                handleConfirm: function (e) {
                    var that = this;

                    var data = [];
                    data.push(this.$nom.val());
                    data.push(this.$url.val());
                    data.push(this.$sit.prop('checked') ? 0 : 1);
                    data.push(this.$sid.val());

                    var params = {
                        dat: data
                    };

                    try {
                        var request = $.ajax({
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(params),
                            dataType: "json",
                            type: "POST",
                            url: ajax.sbco,
                            success: function (d) {

                                var err = d.ERR;
                                if (err == null || err == '' || err == "null") {
                                    var dat = d.DATA;
                                    if (dat != null && dat != "" && dat != "null") {
                                        if (dat.Estado === 1) {
                                            toastr.success(dat.Mensaje);
                                            that.initUI();

                                            var url = '@Url.Action("Detalle", "Banco", new { sid = "___id___" })';
                                            window.location.href = url.replace('___id___', dat.CID);

                                        }
                                        else {
                                            toastr.error(dat.Mensaje);
                                        }
                                    }
                                }
                                else {
                                    toastr.error(err);
                                }
                            }
                        })
                            .fail(function (jqXHR, textStatus, errorThrown) {
                                toastr.error("Solicitud de servidor fallida. Error:" + textStatus + ". " + this.url);
                            });
                    }
                    catch (e) {
                        toastr.error("Error en solicitud: " + e.message);
                    }
                },

                handleAgencia: function (e) {
                    modal.show(0);
                },

                handleNuevo: function (e) {
                    var a = this.initUI();
                    this.$sid.val('');
                    this.$nom.focus();
                    lista.cargarGrillaEmpty();
                },

                bindEvents: function () {
                    this.$btn_sav.on('click', this.handleSave.bind(this));
                    this.$btn_agencia.on('click', this.handleAgencia.bind(this));
                    this.$btn_nuevo.on('click', this.handleNuevo.bind(this));
                },

                init: function () {
                    this.initControls().initUI().bindEvents();
                    this.fill();

                    $(window).keydown(function (event) {
                        if (event.keyCode == 13) {
                            event.preventDefault();
                            return false;
                        }
                    });
                }
            }

            // Modal de Agencia
            var modal = {
                ID: '#m_agencia',
                INPUTS: "input[id^='txt_ag_'], select[id^='sel_ag_']",
                MSGERR: "#modal_message_ag",

                inputs: {
                    NOM: '#txt_ag_nom',
                    DI1: '#txt_ag_di1',
                    DI2: '#txt_ag_di2',
                    TPO: '#sel_ag_tpo',
                    PAI: '#sel_ag_pai',
                    SID: '#hdn_sid_ag'
                },

                action: {
                    buttons: {
                        BUTTON_SAVE: '#btn_age_sav',
                    }
                },

                initControls: function () {
                    this.$modal = $(this.ID);
                    this.$error = $(this.MSGERR);
                    this.$inputs = $(this.INPUTS);

                    this.$nom = $(this.inputs.NOM);
                    this.$di1 = $(this.inputs.DI1);
                    this.$di2 = $(this.inputs.DI2);
                    this.$tpo = $(this.inputs.TPO);
                    this.$pai = $(this.inputs.PAI);

                    this.$sid = $(this.inputs.SID);

                    // Buttons
                    this.$btn_save = $(this.action.buttons.BUTTON_SAVE);
                    return this;
                },

                initUI: function () {
                    this.$inputs.val('');
                    this.$inputs.prop("disabled", false);
                    this.$error.empty();

                    return this;
                },

                initPlugins: function () {
                    $('.modal-dialog').draggable({
                        handle: ".modal-header"
                    });
                    this.$modal.on('hidden.bs.modal', function (e) {
                        $('#tbody_dt tr').siblings().removeClass('rowSelect');
                    });
                    return this;
                },

                fill: function (d) {
                    this.$nom.val(d.Nombre);
                    this.$di1.val(d.Direccion1);
                    this.$di2.val(d.Direccion2);
                    this.$tpo.val(d.Tipo.StrValue);
                    this.$pai.val(d.Pais.CID);
                    this.$sid.val(d.CID);
                },

                show: function (i) {
                    this.$sid.val(i);
                    if (typeof (i) !== "number") {
                        this.getModalData(i);
                    }
                    this.initUI().$modal.modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                },

                // Ajax
                getModalData: function (i) {
                    var that = this;
                    var arr = [];
                    var param = { sid: i };

                    try {
                        $.getJSON(ajax.giag, param, function (e) {
                            var err = e.ERR;
                            if (err == null || err == '' || err == "null") {
                                var data = e.DATA;
                                if (data != null && data != "" && data != "null") {
                                    that.fill(e.DATA);
                                }
                            }
                            else {
                                toastr.error(err);
                            }
                        })
                        .error(function (jqXHR, textStatus, errorThrown) {
                            toastr.error("Solicitud de servidor fallida. " + ajax.giag);
                        });
                    }
                    catch (e) {
                        toastr.error("Error en solicitud: " + e.message);
                    }
                },

                // Handlers
                handleSave: function (e) {
                    var that = this;
                    var rules = {
                        di1: { id: that.inputs.NOM, label: 'Nombre', minsize: 3, maxsize: 35 }
                    };
                    var T = validaSimple.inputTexts(this.MSGERR, rules);
                    if (T === false) return;

                    var rules_sel = {
                        tpo: { id: that.inputs.TPO, label: 'Tipo Operación' },
                        pai: { id: that.inputs.PAI, label: 'País' }
                    }
                    var S = validaSimple.inputSelect(this.MSGERR, rules_sel);
                    if (S === false) return;

                    this.$error.empty();
                    this.$inputs.prop("disabled", true);

                    $.confirm({
                        title: 'Grabar Información',
                        content: '¿Esta seguro de grabar la información?',
                        animationSpeed: 0,
                        theme: 'bootstrap',
                        buttons: {
                            ok: {
                                text: "Aceptar!",
                                btnClass: 'btn-primary',
                                keys: ['enter'],

                                action: function () {
                                    that.handleConfirm();
                                }
                            },
                            cancel: function () {
                                that.$inputs.prop("disabled", false);
                            }
                        }
                    });
                },

                handleConfirm: function (e) {
                    var that = this;

                    var data = [];
                    data.push(this.$nom.val());
                    data.push(this.$di1.val());
                    data.push(this.$di2.val());
                    data.push(this.$tpo.val());
                    data.push(this.$pai.val());

                    data.push(this.$sid.val());
                    data.push(page.$sid.val());

                    var params = {
                        dat: data
                    };

                    try {
                        var request = $.ajax({
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(params),
                            dataType: "json",
                            type: "POST",
                            url: ajax.sage,
                            success: function (d) {

                                var err = d.ERR;
                                if (err == null || err == '' || err == "null") {
                                    var dat = d.DATA;
                                    if (dat != null && dat != "" && dat != "null") {
                                        if (dat.Estado === 1) {
                                            that.$modal.modal('hide');
                                            toastr.success(dat.Mensaje);
                                            that.initUI();
                                            lista.getAgencias();
                                        }
                                        else {
                                            toastr.info(dat.Mensaje);
                                            that.initUI();
                                            that.$modal.modal('hide');
                                        }
                                    }
                                }
                                else {
                                    toastr.error(err);
                                }
                            }
                        })
                            .fail(function (jqXHR, textStatus, errorThrown) {
                                toastr.error("Solicitud de servidor fallida. Error:" + textStatus);
                            });
                    }
                    catch (e) {
                        toastr.error("Error en solicitud: " + e.message);
                    }
                },

                bindEvents: function () {
                    this.$btn_save.on('click', this.handleSave.bind(this));
                },

                init: function () {
                    this.initControls().initUI().initPlugins().bindEvents();
                }
            }

            // Tabla de detalle
            var lista = {
                elements: {
                    TABLE: '#dt_agencias',

                    TEMPL: '#tmpl_agencias',
                    TEMPL_EMPTY: '#tmpl_agencias_empty',
                    TBODY: '#tbody_dt',
                },

                initControls: function () {
                    this.$table = $(this.elements.TABLE);

                    this.$tmpl = $(this.elements.TEMPL);
                    this.$tmpl_empty = $(this.elements.TEMPL_EMPTY);
                    this.$tbody = $(this.elements.TBODY);

                    return this;
                },

                cargarGrilla: function (d) {
                    this.$tbody.empty();
                    this.$tmpl.tmpl(d).appendTo(this.$tbody);
                },

                cargarGrillaEmpty: function () {
                    this.$tbody.empty();
                    this.$tmpl_empty.tmpl().appendTo(this.$tbody);
                },

                // Ajax
                getAgencias: function () {
                    var that = this;
                    var params = {
                        sid: page.$sid.val()
                    };
                    try {
                        var request = $.ajax({
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(params),
                            dataType: "json",
                            type: "POST",
                            url: ajax.lage,
                            success: function (d) {
                                var err = d.ERR;
                                if (err == null || err == '' || err == "null") {
                                    var dat = d.DATA;
                                    if (dat != null && dat != "" && dat != "null") {
                                        if (dat.length > 0) {
                                            that.cargarGrilla(dat);
                                        }
                                    }
                                }
                                else {
                                    toastr.error(err);
                                }
                            }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            toastr.error("Solicitud de servidor fallida. Error:" + textStatus);
                        });
                    }
                    catch (e) {
                        toastr.error("Error en solicitud: " + e.message);
                    }
                },

                // Elimina una agencia
                delAgencia: function (e) {
                    var that = this;
                    var params = {
                        sid: e
                    };
                    try {
                        var request = $.ajax({
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(params),
                            dataType: "json",
                            type: "POST",
                            url: ajax.dage,
                            success: function (d) {
                                var err = d.ERR;
                                if (err == null || err == '' || err == "null") {
                                    var dat = d.DATA;
                                    if (dat != null && dat != "" && dat != "null") {
                                        if (dat.Estado === 1) {
                                            that.getAgencias();
                                            toastr.success(dat.Mensaje);
                                        }
                                        else {
                                            toastr.info(dat.Mensaje);
                                        }
                                    }
                                }
                                else {
                                    toastr.error(err);
                                }
                            }
                        })
                        .fail(function (jqXHR, textStatus, errorThrown) {
                            toastr.error("Solicitud de servidor fallida. Error:" + textStatus);
                        });
                    }
                    catch (e) {
                        toastr.error("Error en solicitud: " + e.message);
                    }
                },

                // Handlers
                handleEdit: function (e) {
                    var sid = e.currentTarget.getAttribute('data-sid');
                    var row = e.currentTarget.parentElement.parentElement;
                    $(row).addClass('rowSelect');
                    modal.show(sid);
                },

                handleDel: function (e) {
                    var sid = e.currentTarget.getAttribute('data-sid');
                    $.alert("No tiene los permisos necesarios.");
                },

                bindEvents: function () {
                    this.$table.delegate('.href-edt', 'click', this.handleEdit.bind(this));
                    this.$table.delegate('.href-del', 'click', this.handleDel.bind(this));
                },

                init: function () {
                    this.initControls().bindEvents();
                    this.getAgencias();

                    $(window).keydown(function (event) {
                        if (event.keyCode == 13) {
                            event.preventDefault();
                            return false;
                        }
                    });
                }
            };

            page.init();
            modal.init();
            lista.init();

        })(jQuery);
    </script>
    *@
}

